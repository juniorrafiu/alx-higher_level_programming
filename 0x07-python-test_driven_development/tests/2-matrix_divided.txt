Test for the ``matrix_divided`` function
in the ``2-matrix_divided.py`` module

Using ``matrix_divided``

Importing the function ``matrix_divided`` from ``2-matrix_divided.py``
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Edge Case Scenarios:

Performing a regular matrix division:
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Unusual inputs:
Checking for when `div` is a string:
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 'temple')
Traceback (most recent call last):
...
TypeError: div must be a number

Checking for division by zero:
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

Checking for matrix being an embedded list:
>>> matrix = [1, 2, 3, 4]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of list) of integers/floats

Checking for matrix rows being unequal:
>>> matrix = [[1, 2, 3, 4], [1, 2]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

Checking for division by infinity:
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Checking for no argument:
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Checking for more than 2 argument:
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 1, 3)
Traceback (most recent call last):
...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

Checking for 1 argument:
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
